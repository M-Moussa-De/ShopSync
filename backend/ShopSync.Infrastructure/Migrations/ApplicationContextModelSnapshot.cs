// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopSync.Infrastructure.Database;

#nullable disable

namespace ShopSync.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopSync.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BriefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Createdat")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updatedat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57a1d6a5-1df6-4b8c-826b-267adeb0c05a"),
                            Brand = "Test Brand 1",
                            BriefDescription = "Brief desc for 1st product",
                            Createdat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4937),
                            Description = "This is the 1st product's description",
                            Image = "test/path/to/product1/img",
                            IsActive = true,
                            Name = "Product one",
                            Price = 100000L,
                            Quantity = 100,
                            Updatedat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4938)
                        },
                        new
                        {
                            Id = new Guid("0d5f358c-bcae-4ced-86ce-80127337ede3"),
                            Brand = "Test Brand 2",
                            BriefDescription = "Brief desc for 2nd product",
                            Createdat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4957),
                            Description = "This is the 2nd product's description",
                            Image = "test/path/to/product2/img",
                            IsActive = true,
                            Name = "Product two",
                            Price = 150000L,
                            Quantity = 90,
                            Updatedat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4957)
                        },
                        new
                        {
                            Id = new Guid("4998c71b-c3cc-4e97-ba5e-6fa28e9b3be7"),
                            Brand = "Test Brand",
                            BriefDescription = "Brief desc for 3rd product",
                            Createdat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4960),
                            Description = "This is the 3red product's description",
                            Image = "test/path/to/product3/img",
                            IsActive = true,
                            Name = "Product three",
                            Price = 175000L,
                            Quantity = 177,
                            Updatedat = new DateTime(2024, 3, 9, 22, 12, 12, 438, DateTimeKind.Utc).AddTicks(4960)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
